// Code generated for package deploy by go-bindata DO NOT EDIT. (@generated)
// sources:
// manifests/ccm.yaml
// manifests/coredns.yaml
// manifests/local-storage.yaml
// manifests/metrics-server/aggregated-metrics-reader.yaml
// manifests/metrics-server/auth-delegator.yaml
// manifests/metrics-server/auth-reader.yaml
// manifests/metrics-server/metrics-apiservice.yaml
// manifests/metrics-server/metrics-server-deployment.yaml
// manifests/metrics-server/metrics-server-service.yaml
// manifests/metrics-server/resource-reader.yaml
// manifests/rolebindings.yaml
// manifests/traefik.yaml
// +build !no_stage

package deploy

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _ccmYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x93\xc1\xab\xdb\x30\x0c\xc6\xef\xfe\x2b\x4c\x2f\x85\x81\x5b\xc6\x2e\x23\xc7\xed\xb0\x7b\x61\xbb\x2b\xb6\xd6\x7a\x75\x2c\x23\xc9\x29\xdb\x5f\x3f\xd2\xf4\x3d\x4a\xf2\x5a\x92\xde\x44\x90\x7e\xdf\xa7\xc8\x1f\x94\xf8\x0b\x59\x22\xe5\xc6\x72\x0b\x7e\x07\x55\x4f\xc4\xf1\x1f\x68\xa4\xbc\x3b\x7f\x95\x5d\xa4\x7d\xff\xd9\x9c\x63\x0e\x8d\xfd\x9e\xaa\x28\xf2\x81\x12\x9a\x0e\x15\x02\x28\x34\xc6\xda\x0c\x1d\x36\xf6\xfc\x45\x9c\x4f\x54\x83\xf3\x94\x95\x29\x25\x64\xd7\x41\x86\x23\xb2\xe1\x9a\x50\x1a\xe3\x2c\x94\xf8\x83\xa9\x16\x19\x06\x9d\xf5\x44\x1c\x62\xbe\xd7\x33\xd6\x32\x0a\x55\xf6\x78\x6b\x4a\x08\x82\x62\xac\xed\x91\xdb\xdb\xb7\x23\xea\x08\x60\x04\xc5\x6b\x59\x4b\x18\xca\x99\xc6\x66\x33\x47\x62\x8f\x59\x27\xc8\x3b\x54\x01\xf5\xa7\xd5\xd0\x4c\x61\x6a\x73\xfb\x69\xbb\x62\x76\x2f\x0a\x5a\x27\x88\xd1\xcb\x22\x88\x20\xf7\xd1\x4f\x3d\xa4\x28\xfa\xf1\x56\x43\x79\x59\x8d\x07\xef\xa9\x3e\xfa\x7b\x8b\x40\x65\x78\x74\xa2\x98\xb5\xa7\x54\xbb\x47\xb7\x7d\x37\xfe\x9a\x5d\xcc\xa1\x50\x7c\x76\xe6\x99\xd0\x65\x76\x77\xe7\xcc\xeb\x29\xf9\x16\x73\x88\xf9\xb8\x3a\x2c\x94\xf0\x80\xbf\x87\xee\xb7\x35\x9f\x28\x1b\x6b\xe7\xf1\x5c\xa4\x23\xb5\xfd\x83\x5e\xaf\xb9\x1c\x11\x3f\x05\x79\xd9\xec\xd8\x24\x05\xfc\xd0\x59\x5b\x74\xf2\x57\x14\x3b\xf3\x3f\x00\x00\xff\xff\x37\xa3\x5f\x88\x54\x04\x00\x00")

func ccmYamlBytes() ([]byte, error) {
	return bindataRead(
		_ccmYaml,
		"ccm.yaml",
	)
}

func ccmYaml() (*asset, error) {
	bytes, err := ccmYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "ccm.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _corednsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x57\x6f\x6f\xdb\xbe\x11\x7e\xef\x4f\x41\x68\xc8\xbb\xc9\x89\x17\xb4\xcb\xf8\x2e\x8d\xdd\x36\x40\xe3\x1a\xb6\x53\xa0\x18\x86\xe0\x4c\x9d\x6d\x2e\x14\x8f\x23\x29\x37\x5e\x97\xef\x3e\x50\xff\x2c\x3a\x4a\x96\x66\xfd\xf9\x8d\x45\x1e\xef\x39\xea\xe1\xf1\xb9\x13\x18\xf9\x0d\xad\x93\xa4\x39\xdb\x8d\x06\xf7\x52\x67\x9c\x2d\xd0\xee\xa4\xc0\x4b\x21\xa8\xd0\x7e\x90\xa3\x87\x0c\x3c\xf0\x01\x63\x1a\x72\xe4\x4c\x90\xc5\x4c\xbb\x7a\xec\x0c\x08\xe4\xec\xbe\x58\x61\xea\xf6\xce\x63\x3e\x48\xd3\x74\xd0\x85\xb6\x2b\x10\x43\x28\xfc\x96\xac\xfc\x37\x78\x49\x7a\x78\x7f\xe1\x86\x92\x4e\x77\xa3\x15\x7a\x68\x22\x5f\xa9\xc2\x79\xb4\x73\x52\x18\x85\x55\xb0\x42\xe5\xc2\x13\x2b\xe3\x58\x8d\x1e\x4b\xff\x15\x91\x77\xde\x82\x31\x52\x6f\xaa\x40\x69\x86\x6b\x28\x94\x77\xed\x7e\xab\x5d\xf1\x66\xdb\xb6\x50\xe8\xf8\x20\x65\x60\xe4\x27\x4b\x85\x29\x91\x53\x96\x24\x03\xc6\x2c\x3a\x2a\xac\xc0\x7a\x0e\x75\x66\x48\xea\x12\x2c\x65\xae\x62\xa6\x1a\x18\xca\xaa\x87\x96\x84\x30\xdc\xa1\x5d\xd5\xbe\x4a\x3a\x5f\x3e\xfc\x00\x2f\xb6\x4f\xe3\x65\xd2\x09\xda\xa1\xdd\xd7\x64\xbc\x10\x5d\xc9\xff\x89\xfe\xff\x53\xfe\x41\xea\x4c\xea\x4d\xc4\x3c\x68\x4d\xbe\x74\xaf\xe9\xef\xc3\x8d\x4e\x04\x0a\x4f\x85\xc9\xc0\x23\x67\x89\xb7\x05\x26\xbf\xff\x00\x49\xe1\x1c\xd7\xe5\xfe\x6a\x4a\x5f\x78\xe1\x01\x63\x4f\xb3\xeb\x19\x64\x57\xac\xfe\x89\xc2\x97\xd9\xd1\x7b\x19\xde\x7c\x05\xda\xdb\x75\x45\x7a\x2d\x37\x37\x60\xde\x72\xb1\x9a\xe5\x57\x64\x71\x2d\x15\x72\xf6\x9f\x92\xd3\x21\x7f\x77\xce\x7e\x96\x8f\xe1\x87\xd6\x92\x75\xed\x70\x8b\xa0\xfc\xb6\x1d\x5a\x84\x6c\xdf\x8e\x0e\xc7\xc1\x4e\x7e\x5e\x7d\xb9\x5d\x2c\x27\xf3\xbb\xf1\xd7\x9b\xcb\xeb\xe9\xe3\x09\x93\x3a\x85\x2c\xb3\x43\xb0\x06\x98\x34\xef\xab\x87\x43\x24\x56\x5e\x03\x26\xb5\x43\x51\x58\xec\xcc\xaf\x41\x29\xbf\xb5\x54\x6c\xb6\xfd\x28\xed\xda\xc7\xc3\x46\xc9\x79\xc7\x4e\xd1\x8b\xd3\x9a\x8a\xd3\x29\x65\xf8\xb9\x9c\xee\x06\xf5\x5e\xb1\xf7\x67\x9d\x09\x8b\x8a\x20\x63\xa3\x77\xae\x7f\x0b\x3d\xc1\x8c\xa5\x1c\xfd\x16\x0b\xc7\xf8\xdf\x46\xef\xce\x5b\xc3\x9a\xec\x0f\xb0\x19\x1b\x56\x3b\x09\x77\x52\xed\x86\x82\xf4\xba\x5d\x22\x40\x6c\x91\x9d\x1f\x76\xa0\x88\xcc\x20\xde\x4c\xc7\x06\xd9\x0a\x14\x68\x51\xf1\xf3\xf8\x24\x39\xc0\x18\x77\xda\x66\xc8\x18\x8d\xa2\x7d\x8e\x6f\xd3\xde\xa3\xcb\x76\xe1\x52\x30\xa6\x5e\x52\x39\x1e\x5f\xc1\x0a\x38\x09\x39\x35\x9e\x2e\x92\x81\x33\x28\x82\xf7\x9f\x2c\x1a\x25\x05\x38\xce\x46\x03\xc6\xc2\x2d\xf5\xb8\xd9\x57\xc0\x7e\x6f\x90\xb3\x39\x29\x25\xf5\xe6\xb6\xbc\xef\x95\x3e\x74\x67\x78\xcd\x41\x0e\x0f\xb7\x1a\x76\x20\x15\xac\x42\xd2\x96\x70\xa8\x50\x78\xb2\xd5\x9a\x3c\x88\xd8\x97\xce\xc6\xfb\xb7\xee\x31\x37\xaa\x05\xee\xb2\x53\x12\x1d\xf9\x3f\xf7\xf2\xcd\xeb\x55\x39\x20\xc9\x4a\xbf\xbf\x52\xe0\xdc\xb4\xe2\xa1\xe2\x31\x15\x95\x5a\xa4\xc2\x4a\x2f\x05\xa8\xa4\x76\x71\x91\x20\x4c\x8f\x0e\xa5\xa4\x86\x14\xda\xae\x66\x86\x5f\xca\xee\x71\x1f\x58\xae\xe1\x2e\xb3\x8c\xb4\xfb\xaa\xd5\x3e\xe9\x64\x2c\x99\xe0\x49\x96\xb3\x64\xf2\x20\x9d\x77\xc9\x13\x00\x4d\x19\xa6\x41\x01\x8f\x74\x57\x90\xf6\x96\x54\x6a\x14\x68\x7c\x25\x26\x63\xb8\x5e\xa3\xf0\x9c\x25\x53\x5a\x88\x2d\x66\x85\xc2\xd7\x87\xcc\x21\x30\xf4\x3b\x62\x85\x08\x8b\x28\x21\xc2\x2f\xd4\xa9\xa3\x90\xe4\x38\x53\x52\x17\x0f\xf5\xa2\xf0\xd6\x20\x35\xda\x96\xea\xf4\xc9\x45\xa9\x7e\x32\x87\x0d\x72\x76\xf2\x73\xf1\x7d\xb1\x9c\xdc\xdc\x8d\x27\x1f\x2f\x6f\xbf\x2c\xef\xe6\x93\x4f\xd7\x8b\xe5\xfc\xfb\xe3\x89\x05\x2d\xb6\x68\x1b\xe9\x49\xeb\x7f\x3e\x1a\x5e\x0c\xcf\x63\x9c\x59\xa1\xd4\x8c\x94\x14\x7b\xce\xae\xd7\x53\xf2\x33\x8b\x0e\xcb\xfa\xd0\x48\x40\xa7\x90\xb7\x42\x20\x73\xe9\xa3\x99\x90\xc3\x39\xd9\x3d\x67\xa3\xbf\x9e\xdd\xc8\x48\xd0\xfe\x55\xa0\x3b\x5e\x2d\x4c\xc1\xd9\xe8\xec\x2c\xef\xc5\x88\x20\xc0\x6e\x1c\x67\x7f\x67\x49\x1a\x94\x2b\xf9\x33\x4b\x22\x5d\x6d\x2a\x48\xc2\xfe\xd1\xba\xec\x48\x15\x39\xde\x84\xbc\x8e\x32\xb7\x21\x34\x14\xae\xb4\x5a\xd4\x89\x9f\x87\xf5\x33\xf0\x5b\x1e\x29\x77\xf4\x2e\x90\x85\x4c\xe7\x2c\xf4\x03\x07\x01\x26\x1b\xc7\x69\x0f\x73\x46\xd6\x73\xd6\x91\xe4\x46\xfd\x62\x5c\x63\xc9\x93\x20\xc5\xd9\xed\x78\xf6\xab\x38\xa9\x17\xa6\x17\x6b\x79\xf5\x02\x56\x54\x28\x1a\xb4\x1c\xbd\x95\xa2\x7f\x67\x5d\xb4\xb2\x46\x06\xb5\x21\xed\xf1\xc1\x77\x8f\x16\x94\xa2\x1f\x33\x2b\x77\x52\xe1\x06\x27\x4e\x80\x2a\x15\x84\x87\x22\xe6\xba\x74\x0b\x30\xb0\x92\x4a\x7a\x89\x47\xc9\x01\x59\x16\x4f\xa4\x6c\x3a\x59\xde\x7d\xb8\x9e\x8e\xef\x16\x93\xf9\xb7\xeb\xab\x49\x64\xce\x2c\x99\x63\x07\x50\xaa\xe7\xe0\xe6\x44\xfe\xa3\x54\x58\x77\x4b\xf1\x31\x2a\xb9\x43\x8d\xce\xcd\x2c\xad\xb0\x8b\xb7\xf5\xde\x7c\x42\x1f\x87\x30\x55\xa2\x1c\xb5\x24\xac\x4e\x07\xce\x2e\xce\x2e\xce\xa2\x69\x27\xb6\x18\x48\xfe\xbc\x5c\xce\x3a\x06\xa9\xa5\x97\xa0\xc6\xa8\x60\xbf\x40\x41\x3a\x73\x3c\x6e\x09\x0c\x5a\x49\x59\x6b\x1b\x75\x6d\x5e\xe6\x48\x85\x3f\x18\x3b\x36\x57\x08\x81\xce\x2d\xb7\x16\xdd\x96\x54\x16\x5b\xd7\x20\x55\x61\xb1\x63\x3d\x8f\x1a\x2b\xf9\xcb\x54\xc4\xed\x58\x87\x89\xd1\xc5\xe8\xcd\x4c\xbc\x40\xc4\x5f\xfe\x60\x1e\x32\xed\x1a\x69\x1c\x57\x8d\x7c\x6d\xa8\x94\xe3\x17\x94\x45\x34\xad\x72\xcc\x5b\xbf\xbe\x97\x54\x78\xcc\xdd\x71\x4a\x97\x35\xac\x91\xbb\xc8\xd6\x1c\x41\xaf\xb1\x76\x6c\xfb\xcf\x5e\xcf\x83\xf5\xd9\x7e\xbf\xfe\x80\xe8\x69\xe5\x3a\x5d\xc9\xb3\xbd\xdc\x93\xef\xaf\x43\xd7\x1a\xca\x61\x95\x29\x49\x50\xa5\xa4\xc7\xec\x84\x05\xf3\xec\x77\xd8\x2b\x5a\xc3\xa6\x09\xaa\x9b\x9e\x0e\xd2\x6b\x9b\xc8\xb8\xcd\xeb\x8b\x59\xc7\xb8\x9e\xf1\xee\x07\xc8\x74\xf1\x78\x32\xe8\xd4\x88\xf4\xa8\x02\x98\xae\xb4\x1f\x17\x82\xb4\x47\xe6\x9f\x71\xa8\xf4\x39\xed\x51\x72\x13\x0b\x7e\xec\xf2\xdf\x00\x00\x00\xff\xff\x77\x1b\x2b\x01\x39\x11\x00\x00")

func corednsYamlBytes() ([]byte, error) {
	return bindataRead(
		_corednsYaml,
		"coredns.yaml",
	)
}

func corednsYaml() (*asset, error) {
	bytes, err := corednsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "coredns.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _localStorageYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x56\x5b\x6f\xdb\xb6\x17\x7f\xd7\xa7\x38\x7f\xfd\x9b\x87\x0d\xa5\x1c\x6f\x0f\xd9\x58\xec\xc1\x4d\x9c\x2c\x40\x62\x1b\xb6\xb7\xa1\x28\x0a\x83\xa6\x8e\x63\x36\x14\x49\x90\x94\x5b\x37\xcb\x77\x1f\x28\xca\x8e\xe4\x38\x17\x63\xdb\xdb\xf4\x22\xf0\xf0\xfc\xce\xfd\x42\x66\xc4\xef\x68\x9d\xd0\x8a\xc2\xaa\x9b\xdc\x0a\x95\x53\x98\xa0\x5d\x09\x8e\x3d\xce\x75\xa9\x7c\x52\xa0\x67\x39\xf3\x8c\x26\x00\x8a\x15\x48\x41\x6a\xce\x24\x31\xcc\x2f\x89\xb1\x7a\x25\x02\x1e\x2d\x71\x11\x47\x58\x0d\x8c\xec\xce\x30\x8e\x14\x6e\xcb\x39\x12\xb7\x76\x1e\x8b\x84\x10\x92\x34\x35\xdb\x39\xe3\x19\x2b\xfd\x52\x5b\xf1\x8d\x79\xa1\x55\x76\xfb\x93\xcb\x84\xee\xac\xba\x73\xf4\x6c\x63\xd8\xa9\x2c\x9d\x47\x3b\xd6\x12\x5f\x6f\x95\x0d\xdc\xb6\x94\xe8\x68\x42\x80\x19\x71\x61\x75\x69\x1c\x85\x8f\x69\xfa\x29\x01\xb0\xe8\x74\x69\x39\x56\x14\xa5\x73\x74\xe9\x5b\x48\x4d\xb0\xcd\x79\x54\x7e\xa5\x65\x59\x20\x97\x4c\x14\xd5\x0d\xd7\x6a\x21\x6e\x0a\x66\x5c\x05\x5f\xa1\x9d\x57\xd0\x1b\xf4\xe1\x5a\x0a\x57\xfd\xbf\x30\xcf\x97\xe9\xa7\x97\x55\xa2\xca\x8d\x16\xca\xef\x55\x1b\x89\x3a\xdf\xd1\xf5\xfd\xab\x04\xaf\x30\x48\x6d\x01\xb9\x45\xe6\xb1\x12\xba\xdf\x3e\xe7\xb5\x65\x37\x58\xc7\xff\xb1\xd0\xfa\x9e\x4b\xe6\x1c\xbe\x32\x02\x7f\x3f\xdb\xef\x85\xca\x85\xba\x79\x7d\xd2\xe7\x42\xe5\x49\xc8\xfc\x18\x17\x81\x79\xe3\xe3\x33\xda\x13\x80\xc7\x55\xf6\x9a\xda\x72\xe5\xfc\x33\x72\x5f\x95\xd7\xde\x06\xfa\xb7\xda\x86\x19\xe3\x3a\xdb\xae\x3d\x43\x23\xf5\xba\xc0\x03\x3a\xf6\x69\x55\xce\x20\xa7\x55\xee\x8d\x14\x9c\x39\x0a\xdd\x04\xc0\xa1\x44\xee\xb5\x0d\x37\x00\x45\xc8\xef\x15\x9b\xa3\x74\x91\x10\xc2\x6c\x9e\xd1\xe5\xb1\x30\x92\x79\xac\xe1\x0d\x23\xc3\x27\x5b\x92\x5e\x92\x05\xb0\x31\x31\x7c\xc6\x0a\x6d\x85\x5f\x9f\x86\xb2\x1c\x54\x1e\xa7\xd1\x13\x12\x3a\x9a\x70\x2b\xbc\xe0\x4c\xa6\x35\xbf\x6b\x25\x68\x70\x58\x76\xc2\xe7\xb5\x44\x5b\x55\x4f\xc3\x62\x00\x02\xb7\xb8\xa6\x90\x9e\xd6\xfa\x7a\x79\xae\x95\x1b\x2a\xb9\x4e\x1b\x5c\x00\xda\x04\xb4\xb6\x14\xd2\xfe\x57\xe1\xbc\x4b\xf7\x08\xa9\x2c\x0f\x15\x96\x85\xcc\x58\x85\x1e\xab\x2e\xe1\x5a\x79\xab\x25\x31\x92\x29\x3c\x40\x2e\x00\x2e\x16\xc8\x3d\x85\x74\xa0\x27\x7c\x89\x79\x29\xf1\x10\xc5\x05\x0b\x7d\xf1\x4f\x69\x0c\x6e\x30\xa1\xd0\x6e\x23\x48\x5e\x2a\xd6\xf8\x89\x82\xdd\x20\x85\xa3\xbb\xc9\x87\xc9\xb4\x7f\x3d\x3b\xeb\x9f\xf7\x7e\xbb\x9a\xce\xc6\xfd\x8b\xcb\xc9\x74\xfc\xe1\xfe\xc8\x32\xc5\x97\x68\x3b\xfb\x05\xd1\xd5\x71\x76\x9c\x75\x7f\x6e\x0b\x1c\x95\x52\x8e\xb4\x14\x7c\x4d\xe1\x72\x31\xd0\x7e\x64\xd1\xe1\x36\xe1\xc1\xde\xa2\x60\x2a\x7f\x48\x37\x79\xc9\x50\x02\xce\x33\xeb\x1b\x67\x42\xe2\xf6\x68\x90\x3a\xe8\x79\x27\x52\xeb\x5f\xf6\xd9\x69\xb5\xe5\x88\x7b\xe0\x3a\xd4\x9e\x6b\xea\x8e\xa1\x8a\x08\x12\x99\x1a\x91\x2f\x02\xff\x88\xf9\x25\x6d\x29\xd8\x72\xa0\x5a\x3d\x16\x36\x1a\x9e\xcd\x06\xbd\xeb\xfe\x64\xd4\x3b\xed\x37\x84\xad\x98\x2c\xf1\xdc\xea\x82\xb6\x72\xbb\x10\x28\xf3\x7a\xbe\x3e\xa2\x47\xdd\x9b\x1e\xcf\xb6\x63\x26\x69\x7a\x75\x80\x43\x91\x7e\xcd\x4c\x5b\xdb\xa3\x82\xa9\xe3\xbb\x3b\x2a\xdb\x6b\xed\x61\x68\x4e\x22\xbd\x9a\x1b\xcf\x8e\xcd\xb0\x43\x94\xd2\xbe\xd9\xf3\xcd\x5d\xb8\xd3\x2a\xc2\x91\x1c\x17\xac\x94\x9e\x54\xd7\x14\x52\x6f\x4b\x4c\x93\x66\x1d\x42\x5d\xa7\x01\xd0\xd0\x14\x7d\xaf\x57\xde\xb5\xce\x91\xc2\x1f\x4c\xf8\x73\x6d\xcf\x85\x75\xfe\x54\x2b\x57\x16\x68\x13\x1b\x1f\x25\x9b\xa2\x3d\x43\x89\x1e\x2b\xcf\xeb\x3d\xb6\x09\x59\xb2\xf3\xca\x7b\x76\x3d\x6c\x0b\xf4\x89\xcd\xb0\x01\x36\x6a\x95\xc2\x9f\xa4\x0a\xc8\x5d\x9d\x9b\x6a\x82\x84\x0a\xb8\x66\x26\xa5\x1f\x6b\xea\xdd\x36\x73\xd5\x7d\x4a\xd3\x4d\xe7\x8e\x7a\xd3\x5f\x67\xe7\xc3\xf1\x6c\x30\x1c\xcc\xae\x2e\x27\xd3\xfe\xd9\x6c\x30\x3c\xeb\x4f\xd2\xb7\x0f\x98\x60\x9d\x4b\xe9\xc7\xf4\xe8\x6e\x83\xbb\x1a\x9e\xf6\xae\x66\x93\xe9\x70\xdc\xbb\xe8\x57\x52\xee\x8f\xaa\x27\x49\xf8\xee\xeb\x7f\x3c\xdf\x57\xeb\xcb\x87\x17\x40\x6d\xec\xff\xff\xd7\x99\x0b\xd5\x71\xcb\xea\xf4\x65\x29\x24\xc2\x0d\x7a\x6d\xbc\x83\xb4\xa0\x8e\x1a\x9a\x82\x36\xb1\x7d\x73\xfd\x30\x07\x98\x43\x78\xa3\x8d\x07\xa1\x5a\xb5\x68\xbe\x6b\x1d\xd9\xdc\x69\x59\xfa\x2a\x0e\xbf\xbc\x19\x8e\xa6\xbd\xf1\x45\x8b\xe1\xdd\xbb\xd6\xd1\xb5\xe1\x4e\x7c\xc3\x4b\xf5\x7e\xed\xd1\xbd\x06\x5d\xb4\xd1\x2b\x2d\x43\xe5\xbc\x84\x44\xc7\x78\xed\x9f\x8a\xdd\x56\xdc\xe6\xc2\x02\x29\xe0\xf8\xe4\xe4\x04\x88\x81\x37\x77\x4d\x47\x62\x50\xf9\xb2\xd0\x39\x9c\x1c\x77\x77\x6f\x3b\x59\x56\xed\x79\x66\x73\xfd\x45\xfd\x17\xea\x67\x43\x6d\x0b\x20\x76\xb1\x27\xc0\x4b\x94\x06\xed\x48\xe7\xd9\x9a\x15\x72\x1b\xc5\x9d\x2e\x0e\xa4\xd8\xe8\x23\x9d\xef\x7d\x51\xc5\xde\x8e\xd2\x88\xa9\x99\x9a\xcf\xa6\xa7\x57\xf0\x0e\x08\x0e\x5b\xbb\x62\x6e\x99\x5d\x93\x79\xe9\xd6\x73\xfd\x95\x76\xb3\x1f\x7f\xc8\xba\xc9\x5f\x01\x00\x00\xff\xff\xfd\xc6\xd0\x47\x6c\x0e\x00\x00")

func localStorageYamlBytes() ([]byte, error) {
	return bindataRead(
		_localStorageYaml,
		"local-storage.yaml",
	)
}

func localStorageYaml() (*asset, error) {
	bytes, err := localStorageYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "local-storage.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _metricsServerAggregatedMetricsReaderYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\xcf\x31\x6b\xf4\x30\x0c\xc6\xf1\xdd\x9f\x42\x78\x7e\x93\x97\x6e\xc5\x6b\x87\xee\x1d\xba\x94\x1b\x94\xf8\x21\x27\xce\xb1\x83\x24\xe7\x68\x3f\x7d\xb9\x70\xdc\x58\x68\x27\x0d\x7f\x7e\x0f\xe8\x22\x35\x27\x7a\x29\xdd\x1c\xfa\xd6\x0a\x02\x6f\xf2\x0e\x35\x69\x35\x91\x4e\x3c\x8f\xdc\xfd\xdc\x54\xbe\xd8\xa5\xd5\xf1\xf2\x6c\xa3\xb4\xff\xfb\x53\x58\xe1\x9c\xd9\x39\x05\xa2\xca\x2b\x12\xd9\xa7\x39\xd6\xc4\xcb\xa2\x58\xd8\x91\x87\x15\xae\x32\xdb\xa0\xe0\x0c\x0d\x44\x85\x27\x14\xbb\x11\xfa\x61\xfd\xb1\x30\x78\x1b\x76\xc1\x35\x51\x74\xed\x88\xbf\x71\xc8\xe2\x7f\x71\x9c\x57\xa9\x0f\xa8\xbd\xc0\x52\x18\x88\x37\x79\xd5\xd6\x37\x4b\xf4\x11\xef\x7f\xdd\x7d\x3c\x05\x22\x85\xb5\xae\x33\x8e\xbe\xb5\x6c\xf1\x1f\xc5\xda\x32\xec\xc8\x3b\x74\x3a\xd2\x02\xbf\x95\x22\x76\xdc\x2b\xfb\x7c\x8e\xa7\xf0\x1d\x00\x00\xff\xff\xe5\x1d\x7a\x17\x89\x01\x00\x00")

func metricsServerAggregatedMetricsReaderYamlBytes() ([]byte, error) {
	return bindataRead(
		_metricsServerAggregatedMetricsReaderYaml,
		"metrics-server/aggregated-metrics-reader.yaml",
	)
}

func metricsServerAggregatedMetricsReaderYaml() (*asset, error) {
	bytes, err := metricsServerAggregatedMetricsReaderYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "metrics-server/aggregated-metrics-reader.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _metricsServerAuthDelegatorYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8e\xbb\x4e\xc4\x40\x0c\x45\xfb\xf9\x8a\xf9\x81\x09\xda\x0e\xb9\x03\x0a\xfa\x45\xa2\x77\x26\x97\xc5\x24\x19\x47\xb6\x27\x12\x7c\x3d\x5a\x11\xd1\xf0\x68\xaf\x74\xcf\x39\xa5\x94\xc4\x9b\x3c\xc3\x5c\xb4\x51\xb6\x91\xeb\xc0\x3d\x5e\xd5\xe4\x83\x43\xb4\x0d\xf3\xad\x0f\xa2\x37\xfb\x69\x44\xf0\x29\xcd\xd2\x26\xca\x0f\x4b\xf7\x80\x9d\x75\xc1\xbd\xb4\x49\xda\x25\xad\x08\x9e\x38\x98\x52\xce\x8d\x57\x50\x5e\x11\x26\xd5\x8b\xc3\x76\x18\xf9\xbb\x07\x56\xba\xd2\xcb\x84\x05\x17\x0e\xb5\x64\xba\xe0\x8c\x97\xeb\x8b\x37\x79\x34\xed\xdb\x3f\x19\x29\xe7\x1f\x01\xdf\xbe\xdf\x05\xde\xc7\x37\xd4\x70\x4a\xe5\xf8\x3e\xc1\x76\xa9\xb8\xab\x55\x7b\x8b\x3f\x72\x8f\xd9\x37\xae\xa0\x3c\xf7\x11\xe5\x8b\x9f\x3e\x03\x00\x00\xff\xff\x69\xfc\x98\x93\x34\x01\x00\x00")

func metricsServerAuthDelegatorYamlBytes() ([]byte, error) {
	return bindataRead(
		_metricsServerAuthDelegatorYaml,
		"metrics-server/auth-delegator.yaml",
	)
}

func metricsServerAuthDelegatorYaml() (*asset, error) {
	bytes, err := metricsServerAuthDelegatorYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "metrics-server/auth-delegator.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _metricsServerAuthReaderYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\x8f\x3d\x4e\xc4\x40\x0c\x46\xfb\x39\xc5\x5c\xc0\x41\xdb\xa1\xe9\xa0\xa1\x5f\x24\x7a\x67\xf2\x01\x26\x1b\x4f\x64\x7b\x22\xe0\xf4\x28\x68\xf9\x69\x76\x7b\xfb\x7d\xef\x11\x51\xe2\x55\x9e\x60\x2e\x4d\x4b\xb6\x91\xeb\xc0\x3d\x5e\x9b\xc9\x27\x87\x34\x1d\xe6\x5b\x1f\xa4\xdd\x6c\x87\x11\xc1\x87\x34\x8b\x4e\x25\x1f\xdb\x09\xf7\xa2\x93\xe8\x4b\x5a\x10\x3c\x71\x70\x49\x39\x2b\x2f\x28\x79\x41\x98\x54\x27\x87\x6d\x30\xda\x79\x64\xe0\x09\x76\x3e\xf1\x95\x2b\x4a\x9e\xfb\x08\xf2\x0f\x0f\x2c\xc9\xda\x09\x47\x3c\xef\x10\x5e\xe5\xc1\x5a\x5f\xaf\xe8\xa4\x9c\xff\x44\x7e\x77\xf1\x1e\xd0\x3d\x84\x78\x95\x7f\xe3\xd0\x90\xfa\xfd\xfe\xa3\xe1\x7d\x7c\x43\x0d\x2f\x89\xce\xa0\x47\xd8\x26\x15\x77\xb5\xb6\xae\x71\x21\xe5\xb2\xfe\x57\x00\x00\x00\xff\xff\xc7\x9e\x8d\xd1\x49\x01\x00\x00")

func metricsServerAuthReaderYamlBytes() ([]byte, error) {
	return bindataRead(
		_metricsServerAuthReaderYaml,
		"metrics-server/auth-reader.yaml",
	)
}

func metricsServerAuthReaderYaml() (*asset, error) {
	bytes, err := metricsServerAuthReaderYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "metrics-server/auth-reader.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _metricsServerMetricsApiserviceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\x8f\x4d\x6a\xc4\x30\x0c\x85\xf7\x3e\x85\x2e\xe0\x74\xb2\x2b\xde\x75\x59\x68\x61\x20\x65\xf6\x1a\x8f\x3a\x08\xe3\x1f\x24\x39\x90\xdb\x97\x30\x71\xba\x13\x7a\xef\xfb\x90\xbc\xf7\x0e\x1b\xdf\x48\x94\x6b\x09\x80\x8d\x85\x9e\xac\x26\x68\x5c\xcb\x94\xde\x75\xe2\xfa\xb6\xce\x77\x32\x9c\x5d\xe2\xf2\x08\xf0\x71\xfd\x5c\x48\x56\x8e\xe4\x32\x19\x3e\xd0\x30\x38\x80\x82\x99\x02\x1c\xd5\x29\x93\x09\x47\x3d\x0c\x4e\x1b\xc5\xbd\xa4\x2f\x70\x1f\x07\x71\x34\xfd\x1e\x91\x9c\x81\x36\x8c\x14\x20\xf5\x3b\x79\xdd\xd4\x28\x3b\x80\xa7\xd4\xde\x4e\x64\xc8\x01\xd6\xf1\xc0\xb8\x14\x80\x8b\x52\xec\x42\x4b\xe2\xf6\xf3\xb5\xdc\x48\xf8\x77\x0b\x60\xd2\x69\x88\xae\xc2\x55\xd8\xb6\x6f\x2e\x9c\x7b\x0e\x30\x5f\x2e\xff\xb2\x91\xbe\xd6\x7f\x01\x00\x00\xff\xff\x25\x03\x92\xf5\x2a\x01\x00\x00")

func metricsServerMetricsApiserviceYamlBytes() ([]byte, error) {
	return bindataRead(
		_metricsServerMetricsApiserviceYaml,
		"metrics-server/metrics-apiservice.yaml",
	)
}

func metricsServerMetricsApiserviceYaml() (*asset, error) {
	bytes, err := metricsServerMetricsApiserviceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "metrics-server/metrics-apiservice.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _metricsServerMetricsServerDeploymentYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x52\x5d\x6b\x53\x4d\x10\xbe\x3f\xbf\x62\x38\x2f\xbd\xdc\xe4\x15\x41\x64\xef\x4a\x1b\x45\x68\xa3\x34\x51\xe8\x55\x99\xee\x99\x98\x25\xfb\xc5\xcc\x24\x7a\x28\xfd\xef\xb2\x3d\x69\x4c\xda\x46\x0a\x3a\x97\xcb\xf3\xb5\xcf\x8c\x31\xa6\xc1\xe2\xbf\x11\x8b\xcf\xc9\xc2\xe6\x4d\xb3\xf2\xa9\xb3\x30\x23\xde\x78\x47\xa7\xce\xe5\x75\xd2\x26\x92\x62\x87\x8a\xb6\x01\x48\x18\xc9\x42\x24\x65\xef\xc4\x08\xf1\x86\x78\xfb\x2c\x05\x1d\x59\x58\xad\x6f\xc9\x48\x2f\x4a\xb1\x79\xea\x80\xa5\xc8\x78\x67\x73\x4e\x25\xe4\x3e\xd2\x5f\x59\x00\x04\xbc\xa5\x20\x95\x09\xb0\x7a\x2f\x06\x4b\x79\x46\x97\x42\xae\x22\x84\x02\x39\xcd\x3c\xa0\x23\xaa\x5b\x5e\xec\xd1\x8f\x0b\x00\x28\xc5\x12\x50\x69\x4b\xdd\x0b\x5c\xe7\x48\xe8\x3a\xe1\xc0\xe0\x4f\x16\x00\x8f\x39\xeb\x14\xf6\x99\xbd\xf6\x67\x01\x45\xa6\x0f\xfa\xed\xf0\x69\x93\x72\x47\xc6\xb1\x57\xef\x30\xb4\x5b\xbc\x1c\x6c\x6d\x7a\x3c\x90\xe6\x40\x8c\xea\x73\xda\x4b\x65\x60\x45\xbd\x85\xf6\x6c\xab\x7a\xda\x75\x39\xc9\xe7\x14\xfa\x76\x87\x01\xc8\xa5\x32\x33\x5b\x68\x27\x3f\xbd\xa8\xb4\xcf\x04\x1e\xb2\x71\x0e\x34\xaa\x6b\xe2\x44\x4a\x32\xf2\x79\xec\x72\x52\xce\xc1\x94\x80\x89\x5e\xa9\x09\x40\x8b\x05\x39\xb5\xd0\x4e\xf3\xcc\x2d\xa9\x5b\x07\x7a\xbd\x65\x44\x51\xe2\x7f\xe1\xb5\xc9\x61\x1d\x69\x57\xd7\x7f\x10\x6b\xc7\xe0\x13\x68\x2c\x20\x19\x7e\x10\x38\x4c\x20\xb8\xa0\xd0\xc3\x5a\x08\x16\x9c\xa3\x11\xc7\xf5\xc6\xc0\x47\xfc\x4e\x02\x98\xba\x71\x66\x60\xc2\xce\xe4\x14\x7a\xa8\xa5\xa0\x4f\xc4\xd2\x3c\x7e\x69\xb8\x24\x8d\xc5\x74\x9e\x77\xe9\x28\x16\xed\xcf\x3d\x5b\xb8\xbb\xdf\x3e\xfe\xe6\xda\x27\xe4\x17\xb7\x0e\x43\x08\x0b\x27\x77\xb3\xeb\xd9\x7c\x72\x79\x73\x3e\xf9\x70\xfa\xf5\x62\x7e\x73\x35\xf9\xf8\x69\x36\xbf\xba\xbe\x3f\x61\x4c\x6e\x49\x3c\x3e\x14\xb0\x9b\xff\x47\x6f\x47\xef\x76\x3a\x43\x19\x97\xb5\x81\x83\x03\x7a\x39\x39\x0c\x5d\x7d\x41\x5d\x5a\x18\x6b\x2c\x4d\xf3\x2b\x00\x00\xff\xff\x49\x06\x40\xf8\x79\x04\x00\x00")

func metricsServerMetricsServerDeploymentYamlBytes() ([]byte, error) {
	return bindataRead(
		_metricsServerMetricsServerDeploymentYaml,
		"metrics-server/metrics-server-deployment.yaml",
	)
}

func metricsServerMetricsServerDeploymentYaml() (*asset, error) {
	bytes, err := metricsServerMetricsServerDeploymentYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "metrics-server/metrics-server-deployment.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _metricsServerMetricsServerServiceYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8e\xcd\x4a\x04\x31\x10\x84\xef\x79\x8a\x26\xf7\x28\xe2\x1e\x24\x57\xcf\xc2\x82\xe2\xbd\x37\x5b\x48\x98\xfc\xd1\xdd\x33\xe0\xdb\xcb\xc4\x41\x10\xe6\xd6\x54\x57\x7d\x55\x21\x04\xc7\x23\x7f\x42\x34\xf7\x16\x69\x7b\x72\x4b\x6e\xf7\x48\xef\x90\x2d\x27\xb8\x0a\xe3\x3b\x1b\x47\x47\xd4\xb8\x22\x52\x85\x49\x4e\x1a\x14\xb2\x41\x0e\x59\x07\x27\x44\x5a\xd6\x1b\x82\x7e\xab\xa1\x3a\xa2\xc2\x37\x14\xdd\x93\x34\x3f\xd2\x60\xd0\x87\xdc\x1f\x7f\x49\xfe\xed\x1f\xca\x9f\x18\x53\x59\xd5\x20\xd3\x91\xf7\x06\x6f\xb2\xc2\x3b\x1d\x48\x3b\x58\x51\x90\xac\xcb\x51\xf2\xa2\x81\xc7\x38\xd9\x38\xba\xd8\x5c\x12\xe6\x19\xe9\x72\x79\x9e\x91\x21\xdd\x7a\xea\x25\xd2\xc7\xeb\x75\x2a\xc6\xf2\x05\xbb\xfe\xb9\x7e\x02\x00\x00\xff\xff\x92\x19\xf9\x3e\x23\x01\x00\x00")

func metricsServerMetricsServerServiceYamlBytes() ([]byte, error) {
	return bindataRead(
		_metricsServerMetricsServerServiceYaml,
		"metrics-server/metrics-server-service.yaml",
	)
}

func metricsServerMetricsServerServiceYaml() (*asset, error) {
	bytes, err := metricsServerMetricsServerServiceYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "metrics-server/metrics-server-service.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _metricsServerResourceReaderYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x90\x3f\x4f\xc4\x30\x0c\xc5\xf7\x7c\x0a\xeb\xf6\xf4\xc4\x86\xb2\x01\x03\xfb\x21\xb1\xbb\xa9\xb9\x33\x6d\xe3\xca\x76\x8a\xe0\xd3\xa3\x6b\xcb\x1f\x81\x74\x42\x62\xca\x4b\xe2\x9f\x9f\xde\x8b\x31\x06\x9c\xf8\x91\xd4\x58\x4a\x02\x6d\x31\x37\x58\xfd\x24\xca\x6f\xe8\x2c\xa5\xe9\xaf\xad\x61\xd9\xcf\x57\xa1\xe7\xd2\x25\xb8\x1b\xaa\x39\xe9\x41\x06\x0a\x23\x39\x76\xe8\x98\x02\x40\xc1\x91\x12\xd8\xab\x39\x8d\x69\x24\x57\xce\x16\x8d\x74\x26\x0d\x5a\x07\xb2\x14\x22\xe0\xc4\xf7\x2a\x75\xb2\x33\x11\x61\xb7\x0b\x00\x4a\x26\x55\x33\x6d\x6f\x93\x74\xb6\x88\x22\x1d\x7d\x53\x7b\x73\xf4\xed\x8e\x23\xd9\x84\x79\xf9\x9e\x49\xdb\x0d\x3d\x92\x2f\xe7\xc0\xb6\x8a\x17\xf4\x7c\x0a\xff\x0b\x79\xcb\xa5\xe3\x72\xfc\x7b\x56\x19\xe8\x40\x4f\xe7\xb1\x8f\xb4\x17\x2c\x03\xc0\xef\x5a\x2f\x1b\x58\x6d\x9f\x29\xfb\xd2\xe7\xca\x3e\x90\xce\x9c\xe9\x26\x67\xa9\xc5\x3f\xf1\x1f\x1c\x7c\xf5\x96\xa0\xaf\x2d\xc5\x75\x7f\x78\x0f\x00\x00\xff\xff\x39\x82\xcc\x46\x05\x02\x00\x00")

func metricsServerResourceReaderYamlBytes() ([]byte, error) {
	return bindataRead(
		_metricsServerResourceReaderYaml,
		"metrics-server/resource-reader.yaml",
	)
}

func metricsServerResourceReaderYaml() (*asset, error) {
	bytes, err := metricsServerResourceReaderYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "metrics-server/resource-reader.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _rolebindingsYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x92\x31\x6f\xe3\x30\x0c\x85\x77\xfd\x0a\x21\xbb\x72\x38\xdc\x72\xf0\xd8\x0e\xdd\x03\xb4\x3b\x6d\xb3\x09\x6b\x59\x14\x48\x2a\x41\xfb\xeb\x0b\xa7\x6e\x82\xa4\x76\x90\xb4\xdd\x24\x41\x7c\x1f\x1f\xf9\x20\xd3\x13\x8a\x12\xa7\xca\x4b\x0d\xcd\x12\x8a\x6d\x58\xe8\x0d\x8c\x38\x2d\xbb\xff\xba\x24\xfe\xb3\xfd\xeb\x3a\x4a\x6d\xe5\xef\x63\x51\x43\x59\x71\xc4\x3b\x4a\x2d\xa5\xb5\xeb\xd1\xa0\x05\x83\xca\x79\x9f\xa0\xc7\xca\x77\xa5\xc6\x00\x99\x14\x65\x8b\x12\x86\x6b\x44\x0b\xd0\xf6\x94\x9c\x70\xc4\x15\x3e\x0f\xbf\x21\xd3\x83\x70\xc9\x17\xc8\xce\xfb\x2f\xe0\x03\x47\x5f\xd5\xb0\xaf\x0e\xfa\x99\x46\x86\x96\xfa\x05\x1b\xd3\xca\x85\x9b\x20\x8f\x8a\x32\xe3\xc2\xb9\x10\x82\xfb\xfe\xb4\x26\xc6\xf4\xd9\xfe\x3f\x0d\x0d\x27\x13\x8e\x11\xc5\x49\x89\x78\xd2\xb8\x0e\x15\xc1\x2f\x16\xce\x7b\x41\xe5\x22\x0d\x8e\x6f\x89\x5b\x54\xe7\xfd\x16\xa5\x1e\x9f\xd6\x68\x57\xd6\x42\x8f\x9a\xa1\x39\x17\x88\xa4\xb6\x3f\xec\xc0\x9a\xcd\x84\x56\x42\xdb\xb1\x74\x94\xd6\xa3\xdf\x29\xf1\x8f\x3f\x99\x23\x35\x74\x33\x61\x42\x10\x53\x9b\x99\x92\xe9\xfe\x96\xb9\x9d\xd3\x1c\xfc\x1f\xb5\x7f\xb8\xb4\xf9\x88\xcf\xec\xee\xf7\xb3\x7d\x0a\x38\x06\x7b\xf0\x78\x1d\xe3\x2c\xdc\x97\x01\xef\x01\x00\x00\xff\xff\x46\xd3\x6d\x9d\x0f\x04\x00\x00")

func rolebindingsYamlBytes() ([]byte, error) {
	return bindataRead(
		_rolebindingsYaml,
		"rolebindings.yaml",
	)
}

func rolebindingsYaml() (*asset, error) {
	bytes, err := rolebindingsYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "rolebindings.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _traefikYaml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x92\x41\x6f\xd3\x4e\x10\xc5\xef\xfe\x14\x23\x4b\x39\xae\xfd\x6f\x4f\xfd\xef\x2d\xa4\x06\x2a\xa0\xa0\x24\x05\xf5\x14\xad\xd7\x93\x78\x95\xf5\xae\x35\x33\x0e\x84\xd2\xef\x8e\x36\x6e\xd3\x20\x55\x2a\x42\x70\xf4\x78\xe6\x37\x6f\xde\x5b\xd3\xbb\xcf\x48\xec\x62\xd0\xd0\xa2\xef\x0a\x6b\x44\x3c\x16\x2e\x96\xbb\xb3\x6c\xeb\x42\xa3\xe1\x2d\xfa\x6e\xd6\x1a\x92\xac\x43\x31\x8d\x11\xa3\x33\x80\x60\x3a\xd4\x20\x64\x70\xed\xb6\xca\x52\xf3\x50\xe3\xde\x58\xd4\xb0\x1d\x6a\x54\xbc\x67\xc1\x2e\xe3\x1e\x6d\x1a\xb1\x09\xa2\xa1\x15\xe9\x59\x97\xe5\xe4\xee\xdd\xcd\xab\x6a\x7e\x5d\x2d\xab\xc5\x6a\xfa\xe9\xea\x7e\x52\xb2\x18\x71\xb6\x3c\x34\x72\x79\x02\x57\xff\x17\x67\x17\xc5\x79\x21\x9b\xef\x99\x52\x2a\xfb\x4b\xba\xff\x9d\xe6\x13\xbd\x00\x8c\x92\x58\x00\x1b\x1f\x6b\xe3\x8b\x71\xc7\x25\xae\xcd\xe0\x65\x8e\x1b\xc7\x42\x7b\x0d\xf9\xe4\x6e\x71\xbb\x58\x56\x1f\x56\x97\xd5\xeb\xe9\xcd\xfb\xe5\x6a\x5e\xbd\xb9\x5a\x2c\xe7\xb7\xab\xf9\xf4\xcb\xfd\x24\xcf\x00\x76\xc6\x0f\xc8\xb3\x18\x04\x83\x68\xf8\xa1\x0e\x5c\xaa\x8d\x1d\x37\x00\x60\x30\xb5\xc7\x26\xdd\x38\xe0\xa1\xd6\x47\x12\x7e\xfc\xfd\x15\x6b\x46\x3b\x10\x3e\x16\x00\xc4\xf3\xd3\xc7\xf3\x80\x66\x1a\x42\x4c\x87\xc6\x70\xec\xed\x29\x76\x28\x2d\x0e\x9c\x6c\x4f\x4b\x34\xe4\x17\xff\x5d\x9c\xe7\xcf\x36\xb0\x25\xd3\xa3\x86\x3c\x61\xc7\x96\x9e\xe2\xce\x35\x48\x47\x64\x4a\x80\x02\x0a\xf2\x55\xd8\x10\xf2\x89\xae\x7e\xa8\xbd\xe3\x16\x9b\x05\xd2\xce\x59\x7c\x41\x31\xb9\x48\x4e\xf6\x33\x6f\x98\xaf\x0f\x91\xe7\xa3\xeb\xca\xfa\x81\x05\x49\x59\x72\xe2\xac\xf1\xa3\x14\xd7\x99\xcd\x91\x39\xbe\x91\x9c\x4c\xb0\x2d\x52\xe9\x5d\x4d\x86\xf6\xea\x21\xdb\x71\x40\xa2\x47\x3a\x35\x44\xc1\x16\x53\x88\xb3\x07\xee\xb4\x69\x62\xe0\x8f\xc1\xef\x1f\xfd\x88\x7d\x9a\x88\xa4\x21\xaf\xbe\x39\x16\xce\x7f\x19\x0c\xb1\x41\x45\xd1\x63\xf1\x64\x43\x32\xce\xc6\x20\x14\xbd\xea\xbd\x09\xf8\x02\x0b\x00\xd7\x6b\xb4\x29\x89\xeb\xb8\xb0\x2d\x36\x83\xc7\xdf\x5b\xd3\x99\x64\xcb\x9f\xf1\x7f\x06\x00\x00\xff\xff\x7d\x43\x33\x7b\x47\x04\x00\x00")

func traefikYamlBytes() ([]byte, error) {
	return bindataRead(
		_traefikYaml,
		"traefik.yaml",
	)
}

func traefikYaml() (*asset, error) {
	bytes, err := traefikYamlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "traefik.yaml", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"ccm.yaml":           ccmYaml,
	"coredns.yaml":       corednsYaml,
	"local-storage.yaml": localStorageYaml,
	"metrics-server/aggregated-metrics-reader.yaml": metricsServerAggregatedMetricsReaderYaml,
	"metrics-server/auth-delegator.yaml":            metricsServerAuthDelegatorYaml,
	"metrics-server/auth-reader.yaml":               metricsServerAuthReaderYaml,
	"metrics-server/metrics-apiservice.yaml":        metricsServerMetricsApiserviceYaml,
	"metrics-server/metrics-server-deployment.yaml": metricsServerMetricsServerDeploymentYaml,
	"metrics-server/metrics-server-service.yaml":    metricsServerMetricsServerServiceYaml,
	"metrics-server/resource-reader.yaml":           metricsServerResourceReaderYaml,
	"rolebindings.yaml":                             rolebindingsYaml,
	"traefik.yaml":                                  traefikYaml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"ccm.yaml":           &bintree{ccmYaml, map[string]*bintree{}},
	"coredns.yaml":       &bintree{corednsYaml, map[string]*bintree{}},
	"local-storage.yaml": &bintree{localStorageYaml, map[string]*bintree{}},
	"metrics-server": &bintree{nil, map[string]*bintree{
		"aggregated-metrics-reader.yaml": &bintree{metricsServerAggregatedMetricsReaderYaml, map[string]*bintree{}},
		"auth-delegator.yaml":            &bintree{metricsServerAuthDelegatorYaml, map[string]*bintree{}},
		"auth-reader.yaml":               &bintree{metricsServerAuthReaderYaml, map[string]*bintree{}},
		"metrics-apiservice.yaml":        &bintree{metricsServerMetricsApiserviceYaml, map[string]*bintree{}},
		"metrics-server-deployment.yaml": &bintree{metricsServerMetricsServerDeploymentYaml, map[string]*bintree{}},
		"metrics-server-service.yaml":    &bintree{metricsServerMetricsServerServiceYaml, map[string]*bintree{}},
		"resource-reader.yaml":           &bintree{metricsServerResourceReaderYaml, map[string]*bintree{}},
	}},
	"rolebindings.yaml": &bintree{rolebindingsYaml, map[string]*bintree{}},
	"traefik.yaml":      &bintree{traefikYaml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
