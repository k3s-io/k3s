ENV['VAGRANT_NO_PARALLEL'] = 'no'
NODE_ROLES = (ENV['E2E_NODE_ROLES'] ||
  ["server-0", "agent-0" ])
NODE_BOXES = (ENV['E2E_NODE_BOXES'] ||
  ['generic/ubuntu2004', 'generic/ubuntu2004'])
GITHUB_BRANCH = (ENV['E2E_GITHUB_BRANCH'] || "master")
RELEASE_VERSION = (ENV['E2E_RELEASE_VERSION'] || "")
NODE_CPUS = (ENV['E2E_NODE_CPUS'] || 2).to_i
NODE_MEMORY = (ENV['E2E_NODE_MEMORY'] || 2048).to_i
# This key must be created using tailscale web
TAILSCALE_KEY = (ENV['E2E_TAILSCALE_KEY'] || "")
NETWORK4_PREFIX = "10.10.10"
install_type = ""

def provision(node, roles, role_num, node_num)
  node.vm.box = NODE_BOXES[node_num]
  node.vm.hostname = "#{roles[0]}-#{role_num}"
  node_ip4 = "#{NETWORK4_PREFIX}.#{100+node_num}"
  node.vm.network "private_network", ip: node_ip4, netmask: "255.255.255.0"
    
  scripts_location = Dir.exists?("./scripts") ? "./scripts" : "../scripts" 
  vagrant_defaults = File.exists?("./vagrantdefaults.rb") ? "./vagrantdefaults.rb" : "../vagrantdefaults.rb"
  load vagrant_defaults
  
  defaultOSConfigure(node.vm)

  install_type = getInstallType(node.vm, RELEASE_VERSION, GITHUB_BRANCH)

  node.vm.provision "Ping Check", type: "shell", inline: "ping -c 2 k3s.io"
  node.vm.provision "Install tailscale", type: "shell", inline: "curl -fsSL https://tailscale.com/install.sh | sh"

  if roles.include?("server") && role_num == 0
    server_IP = nil
    node.vm.provision :k3s, run: 'once' do |k3s|
      k3s.config_mode = '0644' # side-step https://github.com/k3s-io/k3s/issues/4321
      k3s.args = "server "
      k3s.config = <<~YAML
        cluster-init: true
        token: vagrant
        vpn-auth: "name=tailscale,joinKey=#{TAILSCALE_KEY}"
      YAML
      k3s.env = ["K3S_KUBECONFIG_MODE=0644", install_type]
    end
  end
  if roles.include?("agent")
    node.vm.provision :k3s, run: 'once' do |k3s|
      k3s.config_mode = '0644' # side-step https://github.com/k3s-io/k3s/issues/4321
      k3s.args = "agent "
      k3s.config = <<~YAML
        server: https://TAILSCALEIP:6443
        token: vagrant
        vpn-auth: "name=tailscale,joinKey=#{TAILSCALE_KEY}"
      YAML
      k3s.env = ["K3S_KUBECONFIG_MODE=0644",  "INSTALL_K3S_SKIP_START=true", install_type]
    end
  end
end

Vagrant.configure("2") do |config|
  config.vagrant.plugins = ["vagrant-k3s", "vagrant-reload", "vagrant-libvirt", "vagrant-scp"]
  config.vm.provider "libvirt" do |v|
    v.cpus = NODE_CPUS
    v.memory = NODE_MEMORY
  end
  
  if NODE_ROLES.kind_of?(String)
    NODE_ROLES = NODE_ROLES.split(" ", -1)
  end
  if NODE_BOXES.kind_of?(String)
    NODE_BOXES = NODE_BOXES.split(" ", -1)
  end

  # Must iterate on the index, vagrant does not understand iterating 
  # over the node roles themselves
  NODE_ROLES.length.times do |i|
    name = NODE_ROLES[i]
    config.vm.define name do |node|
      roles = name.split("-", -1)
      role_num = roles.pop.to_i
      provision(node, roles, role_num, i)
    end
  end
end
