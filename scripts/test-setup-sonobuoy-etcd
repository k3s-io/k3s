#!/bin/bash

. ./scripts/test-setup-sonobuoy

export NUM_SERVERS=1
export NUM_AGENTS=1
export SERVER_1_ARGS="--cluster-init"

server-post-hook() {
  if [ $1 -eq 1 ]; then
    local url=$(cat $TEST_DIR/servers/1/metadata/url)
    export SERVER_ARGS="--server $url"
  fi
}
export -f server-post-hook

test-post-hook() {
  if [[ $1 -eq 0 ]]; then
    return
  fi
  local failures=$(awk '/^Summarizing .* Failures?:$/,0' "$TEST_DIR"/sonobuoy/plugins/e2e/results/global/e2e.log)
  # Ignore sonobuoy failures if only these flaky tests have failed
  local flakyTest1='[Fail] [sig-node] Pods [It] should run through the lifecycle of Pods and PodStatus [Conformance]' 
  local flakyTest2='[Fail] [sig-node] KubeletManagedEtcHosts [It] should test kubelet managed /etc/hosts file [LinuxOnly] [NodeConformance] [Conformance]'
  local flakyTest3='[Fail] [sig-api-machinery] AdmissionWebhook [Privileged:ClusterAdmin] [It] should be able to deny pod and configmap creation [Conformance]'
  local flakyTest4='[Fail] [sig-apps] Deployment [It] should run the lifecycle of a Deployment [Conformance]'
  flakyFails=$( grep -scF -e "$flakyTest1" -e "$flakyTest2" -e "$flakyTest3" -e "$flakyTest4" <<< "$failures" )
  totalFails=$( grep -scF -e "[Fail]" <<< "$failures" )
  [ "$totalFails" -le "$flakyFails" ]
}
export -f test-post-hook

