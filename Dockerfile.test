ARG GOLANG=golang:1.19.3-alpine3.16
FROM ${GOLANG} as test-base

RUN apk -U --no-cache add bash jq
ENV K3S_SOURCE /go/src/github.com/k3s-io/k3s/
WORKDIR ${K3S_SOURCE}

COPY . ${K3S_SOURCE}


From test-base as test-mods

COPY ./scripts/test-mods /bin/
ENTRYPOINT ["/bin/test-mods"]

From test-base as test-k3s

RUN apk -U --no-cache add git gcc musl-dev docker curl coreutils python3 openssl py3-pip procps findutils

ENV SONOBUOY_VERSION 0.56.10

RUN OS=linux; \
    ARCH=$(go env GOARCH); \
    RELEASE=$(curl -fs https://storage.googleapis.com/kubernetes-release/release/stable.txt); \
    if [ "${ARCH}" == "amd64" ] || [ "${ARCH}" == "arm64" ] || [ "${ARCH}" == "s390x" ]; then \
      curl -sL "https://github.com/vmware-tanzu/sonobuoy/releases/download/v${SONOBUOY_VERSION}/sonobuoy_${SONOBUOY_VERSION}_${OS}_${ARCH}.tar.gz" | \
      tar -xzf - -C /usr/local/bin; \
    fi; \
    curl -fsL https://storage.googleapis.com/kubernetes-release/release/${RELEASE}/bin/linux/${ARCH}/kubectl -o /usr/local/bin/kubectl; \
    chmod a+x /usr/local/bin/kubectl; \
    pip install codespell

ENV TEST_CLEANUP true

ENTRYPOINT ["./scripts/entry.sh"]
CMD ["test"]
