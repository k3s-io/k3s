dist: bionic
sudo: required

branches:
  except:
    - master

# setup travis so that we can run containers for integration tests
services:
  - docker

language: go

os:
- linux

go:
  - "1.16.8"

env:
  - TRAVIS_GOOS=linux TEST_RUNTIME=io.containerd.runc.v1 TRAVIS_CGO_ENABLED=1 TRAVIS_DISTRO=bionic GOPROXY=direct
  - TRAVIS_GOOS=linux TEST_RUNTIME=io.containerd.runc.v2 TRAVIS_CGO_ENABLED=1 TRAVIS_DISTRO=bionic TRAVIS_RELEASE=yes GOPROXY=direct
  - TRAVIS_GOOS=linux TEST_RUNTIME=io.containerd.runc.v2 TRAVIS_CGO_ENABLED=1 TRAVIS_DISTRO=bionic GOPROXY=direct RUNC_FLAVOR=crun
  - TRAVIS_GOOS=linux TEST_RUNTIME=io.containerd.runtime.v1.linux TRAVIS_CGO_ENABLED=1 TRAVIS_DISTRO=bionic GOPROXY=direct

matrix:
  include:
    # Skip testing previous LTS (Xenial / Ubuntu 16.04 LTS) on pull requests
    - if: type != pull_request
      os: linux
      dist: xenial
      env: TRAVIS_GOOS=linux TEST_RUNTIME=io.containerd.runc.v2 TRAVIS_CGO_ENABLED=1 TRAVIS_DISTRO=xenial GOPROXY=direct

go_import_path: github.com/containerd/containerd

addons:
  apt:
    packages:
      - btrfs-tools
      - libnl-3-dev
      - libnet-dev
      - protobuf-c-compiler
      # - protobuf-compiler
      - python-minimal
      - libcap-dev
      - libaio-dev
      - libprotobuf-c-dev
      - libprotobuf-dev

before_install:
  - uname -r

install:
  - sudo PATH=$PATH GOPATH=$GOPATH script/setup/install-protobuf
  - sudo chmod +x /usr/local/bin/protoc
  - sudo chmod og+rx /usr/local/include/google /usr/local/include/google/protobuf /usr/local/include/google/protobuf/compiler
  - sudo chmod -R og+r /usr/local/include/google/protobuf/
  - protoc --version
  - if [ "$TRAVIS_GOOS" = "linux" ]; then sudo PATH=$PATH GOPATH=$GOPATH script/setup/install-seccomp ; fi
  - if [ "$TRAVIS_GOOS" = "linux" ]; then sudo PATH=$PATH GOPATH=$GOPATH script/setup/install-runc ; fi
  - if [ "$TRAVIS_GOOS" = "linux" ]; then sudo PATH=$PATH GOPATH=$GOPATH script/setup/install-cni ; fi
  - if [ "$TRAVIS_GOOS" = "linux" ]; then sudo PATH=$PATH GOPATH=$GOPATH script/setup/install-critools ; fi
  - if [ "$TRAVIS_GOOS" = "linux" ]; then wget https://github.com/checkpoint-restore/criu/archive/v3.13.tar.gz -O /tmp/criu.tar.gz ; fi
  - if [ "$TRAVIS_GOOS" = "linux" ]; then tar -C /tmp/ -zxf /tmp/criu.tar.gz ; fi
  - if [ "$TRAVIS_GOOS" = "linux" ]; then cd /tmp/criu-3.13 && sudo make install-criu ; fi
  - cd $TRAVIS_BUILD_DIR

script:
  - export GOOS=$TRAVIS_GOOS
  - export CGO_ENABLED=$TRAVIS_CGO_ENABLED
  - GOOS=linux GO111MODULE=off script/setup/install-dev-tools
  - go build -i .
  - make build
  - make binaries
  - if [ "$TRAVIS_GOOS" = "linux" ]; then sudo make install ; fi
  - if [ "$TRAVIS_GOOS" = "linux" ]; then make coverage ; fi
  - if [ "$TRAVIS_GOOS" = "linux" ]; then sudo PATH=$PATH GOPATH=$GOPATH make root-coverage ; fi
  - if [ "$TRAVIS_GOOS" = "linux" ]; then sudo PATH=$PATH GOPATH=$GOPATH make integration EXTRA_TESTFLAGS=-no-criu ; fi
  # Run the integration suite a second time. See discussion in github.com/containerd/containerd/pull/1759
  - if [ "$TRAVIS_GOOS" = "linux" ]; then sudo PATH=$PATH GOPATH=$GOPATH TESTFLAGS_PARALLEL=1 make integration EXTRA_TESTFLAGS=-no-criu ; fi
  - |
    if [ "$TRAVIS_GOOS" = "linux" ]; then
      sudo mkdir -p /etc/containerd
      sudo bash -c "cat > /etc/containerd/config.toml <<EOF
      [plugins.cri.containerd.default_runtime]
        runtime_type = \"${TEST_RUNTIME}\"
    EOF"
      sudo PATH=$PATH containerd -log-level debug &> /tmp/containerd-cri.log &
      sudo ctr version
      sudo PATH=$PATH GOPATH=$GOPATH critest --runtime-endpoint=/var/run/containerd/containerd.sock --parallel=8
      TEST_RC=$?
      test $TEST_RC -ne 0 && cat /tmp/containerd-cri.log
      sudo pkill containerd
      sudo rm -rf /etc/containerd
      test $TEST_RC -eq 0 || /bin/false
    fi

after_success:
  - bash <(curl -s https://codecov.io/bash) -F linux

before_deploy:
  - if [ "$TRAVIS_RELEASE" = "yes" ]; then make release cri-release; fi

deploy:
  - provider: releases
    api_key:
      secure: HO+WSIVVUMMsbU74x+YyFsTP3ahqnR4xjwKAziedJ5lZXKJszQBhiYTFmcTeVBoouNjTISd07GQzpoLChuGC20U3+1NbT+CkK8xWR/x1ao2D3JY3Ds6AD9ubWRNWRLptt/xOn5Vq3F8xZyUYchwvDMl4zKCuTKxQGVdHKsINb2DehKcP5cVL6MMvqzEdfj2g99vqXAqs8uuo6dOmvxmHV43bfzDaAJSabjZZs6TKlWTqCQMet8uxyx2Dmjl2lxLwdqv12oJdrszacasn41NYuEyHI2bXyef1mhWGYN4n9bU/Y5winctZ8DOSOZvYg/2ziAaUN0+CTn1IESwVesrPz23P2Sy7wdLxu8dSIZ2yUHl7OsA5T5a5rDchAGguRVNBWvoGtuepEhdRacxTQUo1cMFZsEXjgRKKjdfc1emYQPVdN8mBv8GJwndty473ZXdvFt5R0kNVFtvWuYCa6UYJD2cKrsPSAfbZCDC/LiR3FOoTaUPMZUVkR2ACEO7Dn4+KlmBajqT40Osk/A7k1XA/TzVhMIpLtE0Vk2DfPmGsjCv8bC+MFd+R2Sc8SFdE92oEWRdoPQY5SxMYQtGxA+cbKVlT1kSw6y80yEbx5JZsBnT6+NTHwmDO3kVU9ztLdawOozTElKNAK8HoAyFmzIZ3wL64oThuDrv/TUuY8Iyn814=
    file_glob: true
    file:
      - releases/*.tar.gz
      - releases/*.tar.gz.sha256sum
    skip_cleanup: true
    on:
      repo: containerd/containerd
      tags: true
      condition: $TRAVIS_GOOS = linux
  - provider: script
    script: bash script/release/deploy-cri
    skip_cleanup: true
    on:
      repo: containerd/containerd
      tags: true
      condition: $TRAVIS_GOOS = linux
