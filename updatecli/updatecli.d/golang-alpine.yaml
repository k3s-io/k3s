---
name: "Bump Golang Alpine version"
scms:
  k3s:
    kind: "github"
    spec:
      user: "{{ .github.user }}"
      email: "{{ .github.email }}"
      username: "{{ .github.username }}"
      token: "{{ requiredEnv .github.token }}"
      owner: "{{ .k3s.org }}"
      repository: "{{ .k3s.repo }}"
      branch: "{{ .k3s.branch }}"

pullrequests:
  github:
    title: "Bump golang:alpine image version"
    kind: "github"
    scmid: "k3s"
    spec:
      automerge: false

sources:
  golang-docker-image:
    name: "Check golang image version in DockerHub"
    kind: "dockerimage"
    spec:
      image: "golang"
      versionfilter:
        kind: "semver"
        regex: "*"
  golang-alpine-docker-image:
    name: "Check golang:alpine image version in DockerHub"
    kind: "dockerimage"
    sourceid: "golang-docker-image"
    dependson:
      - "golang-docker-image"
    spec:
      image: "golang"
      versionfilter:
        kind: "regex"
        pattern: '{{ source `golang-docker-image` }}-alpine'

conditions:
  dockerfile-dapper:
    name: "Check if 'ARG GOLANG' is set in Dockerfile.dapper"
    kind: "dockerfile"
    scmid: "k3s"
    sourceid: "golang-alpine-docker-image"
    spec:
      file: "Dockerfile.dapper"
      instruction:
        keyword: "ARG"
        matcher: "GOLANG"
  dockerfile-test:
    name: "Check if 'ARG GOLANG' is set in Dockerfile.test"
    kind: "dockerfile"
    scmid: "k3s"
    sourceid: "golang-alpine-docker-image"
    spec:
      file: "Dockerfile.test"
      instruction:
        keyword: "ARG"
        matcher: "GOLANG"
  dockerfile-manifest:
    name: "Check if 'ARG GOLANG' is set in Dockerfile.manifest"
    kind: "dockerfile"
    scmid: "k3s"
    sourceid: "golang-alpine-docker-image"
    spec:
      file: "Dockerfile.manifest"
      instruction:
        keyword: "ARG"
        matcher: "GOLANG"

targets:
  dockerfiles:
    name: "Bump golang:alpine image version in Dockerfiles"
    kind: "file"
    scmid: "k3s"
    disablesourceinput: true
    spec:
      files:
        - "Dockerfile.dapper"
        - "Dockerfile.test"
        - "Dockerfile.manifest"
      matchpattern: 'ARG GOLANG=golang:v?\d+\.\d+\.\d+(-alpine\S+)?'
      replacepattern: 'ARG GOLANG=golang:{{ source "golang-alpine-docker-image" }}'
